{
  "repo_directory": "C:\\Users\\sacheu\\speckit_repos\\ic3_spool_cosine-dep-spool",
  "repo_name": "ic3_spool_cosine-dep-spool",
  "readme_filename": "README.md",
  "readme_content": "# Azure Communication Services (previously known as ProjectSpool)\n\n## Introduction\n\nAzure Communication Services (ACS) is a collection of micro-services that allows you to easily add real-time communications\nfeatures to your applications.\n\nWhen you use ACS, you're building on top of the same infrastructure that powers Microsoft Teams and the consumer Skype experience.\nThese Azure native services seamlessly auto-scale for global deployments of any size. You can use ACS for voice, video, text,\nand data communication in a variety of scenarios:\n\n- Browser-to-browser, browser-to-app, and app-to-app communication\n- Humans engaging bots or other services\n- Humans and bots engaging the public switched telephony network\n\nYou can mix communication types intuitively, for example a single call may have end-users enjoying a browser application and\ninteracting with end-users on traditional telephony devices. You can build services and applications to directly interact with\nthe data plane of the voice, video, data, and text channels; for example using Azure Bots to support an interactive voice response systems (IVR).\n\n## Getting Started\n\n### Building and Testing\n\n[Getting_started](getting_started.md) guide for instructions on how to get the code and build.\n\n[Getting_started_testing](getting_started_testing.md) for team practices and norms on testing.\n\n[Running_scripts](running_scripts.md) for how to set up your machine to run scripts.\n\n[Running Unit Tests](running_unit_tests.md)\n\n### Contributing\n\nThank you for your contributing to the ACS Resource Provider repository!\n\nBefore completing any Pull Request, please make sure the following checklist have been completed\n\n- The changes have the necessary UnitTests/FunctionalTests/Synthetics coverage.\n- The changes are backward compatible. Do you need to split the PR into separate deployment stages?\n- Necessary feature flags (AFEC) have been applied to hide private-preview functionalities from public.\n- (Optional) Deployed and validated on RP DEV.\n\nPlease add additional checklist items to the PR description as applicable.\n\n### Resources\n\n- Join [TM-Spool](https://myaccess/identityiq/ui/rest/redirect?rp1=/accessRequest/accessRequest.jsf&rp2=accessRequest/review?role=TM-Spool&autoSubmit=true)\n- Join [Project Spool security group](http://idwebelements/GroupManagement.aspx?Group=spoolsg&Operation=join) (spoolsg)\n- Teams channels:\n  - [Spool](https://teams.microsoft.com/l/team/19%3a398293ae9b15452886bbc547e2c5e20e%40thread.skype/conversations?groupId=3e9c1fc3-39df-4486-a26a-456d80e80f82&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47) - Intended for both ACI and IC3 team members.\n  - [Spool ACI](https://teams.microsoft.com/l/team/19%3a9deef507d1994a12987cb292655d9814%40thread.skype/conversations?groupId=4809a850-1af6-44d4-9069-9b723af7bfd2&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47) - Intended for ACI team members.\n",
  "setup_commands_executed": [],
  "setup_commands_skipped": [],
  "status": "SUCCESS"
}